{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useParams}from\"react-router-dom\";import{BASE_URL}from\"../utils/config\";import jwt from\"jsonwebtoken\";// Import jsonwebtoken library\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const UserBookings=()=>{const{userId}=useParams();const[bookings,setBookings]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[decodedToken,setDecodedToken]=useState(null);// State to store decoded token\nuseEffect(()=>{const fetchBookings=async()=>{try{const response=await fetch(\"\".concat(BASE_URL,\"/booking/userbookings/\").concat(userId));if(!response.ok){throw new Error(\"Failed to fetch data: \".concat(response.status));}const data=await response.json();setBookings(data.data);setLoading(false);}catch(err){setError(err.message);setLoading(false);}};fetchBookings();// Decode the token when component mounts\nconst accessToken=document.cookie.split(\";\").find(cookie=>cookie.trim().startsWith(\"accessToken=\"));if(accessToken){const token=accessToken.split(\"=\")[1];const decoded=jwt.decode(token);setDecodedToken(decoded);}},[userId]);if(loading){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});}if(error){return/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User Bookings\"}),decodedToken&&/*#__PURE__*/_jsxs(\"p\",{children:[\"User ID: \",decodedToken.id]}),bookings.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No bookings found for this user.\"}):/*#__PURE__*/_jsx(\"ul\",{children:bookings.map(booking=>/*#__PURE__*/_jsx(\"li\",{},booking._id))})]});};export default UserBookings;","map":{"version":3,"names":["React","useState","useEffect","useParams","BASE_URL","jwt","UserBookings","userId","bookings","setBookings","loading","setLoading","error","setError","decodedToken","setDecodedToken","fetchBookings","response","fetch","ok","Error","status","data","json","err","message","accessToken","document","cookie","split","find","trim","startsWith","token","decoded","decode","id","length","map","booking","_id"],"sources":["C:/Users/user/OneDrive/Documents/Tourism-Project-MERN/frontend/src/pages/Userbookings.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { BASE_URL } from \"../utils/config\";\r\nimport jwt from \"jsonwebtoken\"; // Import jsonwebtoken library\r\n\r\nconst UserBookings = () => {\r\n  const { userId } = useParams();\r\n  const [bookings, setBookings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [decodedToken, setDecodedToken] = useState(null); // State to store decoded token\r\n\r\n  useEffect(() => {\r\n    const fetchBookings = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${BASE_URL}/booking/userbookings/${userId}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch data: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setBookings(data.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBookings();\r\n\r\n    // Decode the token when component mounts\r\n    const accessToken = document.cookie\r\n      .split(\";\")\r\n      .find((cookie) => cookie.trim().startsWith(\"accessToken=\"));\r\n    if (accessToken) {\r\n      const token = accessToken.split(\"=\")[1];\r\n      const decoded = jwt.decode(token);\r\n      setDecodedToken(decoded);\r\n    }\r\n  }, [userId]);\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>User Bookings</h2>\r\n      {decodedToken && <p>User ID: {decodedToken.id}</p>}\r\n      {bookings.length === 0 ? (\r\n        <p>No bookings found for this user.</p>\r\n      ) : (\r\n        <ul>\r\n          {bookings.map((booking) => (\r\n            <li key={booking._id}>{/* Display booking details here */}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserBookings;\r\n"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,OAASC,QAAQ,KAAQ,iBAAiB,CAC1C,MAAOC,IAAG,KAAM,cAAc,CAAE;AAAA,wFAEhC,KAAMC,aAAY,CAAG,IAAM,CACzB,KAAM,CAAEC,MAAO,CAAC,CAAGJ,SAAS,EAAE,CAC9B,KAAM,CAACK,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACa,YAAY,CAAEC,eAAe,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAAE;AAExDC,SAAS,CAAC,IAAM,CACd,KAAMc,cAAa,CAAG,SAAY,CAChC,GAAI,CACF,KAAMC,SAAQ,CAAG,KAAMC,MAAK,WACvBd,QAAQ,kCAAyBG,MAAM,EAC3C,CACD,GAAI,CAACU,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAIC,MAAK,iCAA0BH,QAAQ,CAACI,MAAM,EAAG,CAC7D,CAEA,KAAMC,KAAI,CAAG,KAAML,SAAQ,CAACM,IAAI,EAAE,CAClCd,WAAW,CAACa,IAAI,CAACA,IAAI,CAAC,CACtBX,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,MAAOa,GAAG,CAAE,CACZX,QAAQ,CAACW,GAAG,CAACC,OAAO,CAAC,CACrBd,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDK,aAAa,EAAE,CAEf;AACA,KAAMU,YAAW,CAAGC,QAAQ,CAACC,MAAM,CAChCC,KAAK,CAAC,GAAG,CAAC,CACVC,IAAI,CAAEF,MAAM,EAAKA,MAAM,CAACG,IAAI,EAAE,CAACC,UAAU,CAAC,cAAc,CAAC,CAAC,CAC7D,GAAIN,WAAW,CAAE,CACf,KAAMO,MAAK,CAAGP,WAAW,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACvC,KAAMK,QAAO,CAAG7B,GAAG,CAAC8B,MAAM,CAACF,KAAK,CAAC,CACjClB,eAAe,CAACmB,OAAO,CAAC,CAC1B,CACF,CAAC,CAAE,CAAC3B,MAAM,CAAC,CAAC,CAEZ,GAAIG,OAAO,CAAE,CACX,mBAAO,mBAAG,YAAU,EAAI,CAC1B,CAEA,GAAIE,KAAK,CAAE,CACT,mBAAO,qBAAG,SAAO,CAACA,KAAK,GAAK,CAC9B,CAEA,mBACE,oCACE,oBAAI,eAAa,EAAK,CACrBE,YAAY,eAAI,qBAAG,WAAS,CAACA,YAAY,CAACsB,EAAE,GAAK,CACjD5B,QAAQ,CAAC6B,MAAM,GAAK,CAAC,cACpB,mBAAG,kCAAgC,EAAI,cAEvC,oBACG7B,QAAQ,CAAC8B,GAAG,CAAEC,OAAO,eACpB,aAASA,OAAO,CAACC,GAAG,CACrB,CAAC,EAEL,GACG,CAEV,CAAC,CAED,cAAelC,aAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}