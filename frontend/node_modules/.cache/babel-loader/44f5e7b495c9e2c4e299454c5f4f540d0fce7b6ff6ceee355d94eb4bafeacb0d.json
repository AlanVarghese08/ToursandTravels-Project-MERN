{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\Tourism-Project-MERN\\\\frontend\\\\src\\\\pages\\\\Userbookings.jsx\";\n// import React, { useState, useEffect } from \"react\";\n// import jwt from \"jsonwebtoken\";\n// import { BASE_URL } from \"../utils/config\";\n// import { useParams } from \"react-router-dom\";\n// import useFetch from \"../hooks/useFetch\";\n\n// const Userbookings = () => {\n//   const [bookings, setBookings] = useState([]);\n//   const { userId } = useParams();\n\n//   const getAccessToken = () => {\n//     const cookies = document.cookie.split(\"; \");\n//     const accessTokenCookie = cookies.find((row) =>\n//       row.startsWith(\"accessToken=\")\n//     );\n\n//     if (accessTokenCookie) {\n//       return accessTokenCookie.split(\"=\")[1];\n//     }\n\n//     return null;\n//   };\n\n//   // Function to decode JWT token\n//   const decodeToken = (token) => {\n//     try {\n//       const decoded = jwt.verify(token, process.env.JWT_SECRET_KEY);\n//       return decoded.id;\n//     } catch (error) {\n//       return null;\n//     }\n//   };\n\n//   // Get JWT token from cookies\n//   const accessToken = getAccessToken();\n//   const decodedUserId = accessToken ? decodeToken(accessToken) : null;\n\n//   // Set up headers with the decoded user ID\n//   const headers = {\n//     Authorization: `Bearer ${accessToken}`,\n//   };\n\n//   // Construct fetch URL based on the presence of userId\n//   const fetchUrl = userId\n//     ? `${BASE_URL}/booking/userbookings/${decodedUserId}`\n//     : `${BASE_URL}/booking/userbookings`;\n\n//   // UseFetch hook for fetching data\n//   const {\n//     data: fetchedBookings,\n//     loading,\n//     error,\n//   } = useFetch(fetchUrl, { headers });\n\n//   // Update state when data is fetched\n//   useEffect(() => {\n//     if (!loading && !error) {\n//       setBookings(fetchedBookings.data);\n//     }\n//   }, [fetchedBookings, loading, error]);\n\n//   // Loading state\n//   if (loading) {\n//     return <p>Loading...</p>;\n//   }\n\n//   // Error state\n//   if (error) {\n//     return <p>Error fetching user bookings: {error}</p>;\n//   }\n\n//   // Render the component\n//   return (\n//     <div>\n//       <h2>User Bookings</h2>\n//       {bookings.length === 0 ? (\n//         <p>No bookings available for this user.</p>\n//       ) : (\n//         <ul>\n//           {bookings.map((booking) => (\n//             <li key={booking._id}>\n//               <p>\n//                 <strong>Tour Name:</strong> {booking.tourName}\n//               </p>\n//               <p>\n//                 <strong>Guest Name:</strong> {booking.fullName}\n//               </p>\n//               <p>\n//                 <strong>Date:</strong> {booking.date}\n//               </p>\n//               <p>\n//                 <strong>Booked At:</strong> {booking.bookAt}\n//               </p>\n//               {/* Add more details as needed */}\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Userbookings;\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Userbookings = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Userbookings\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 10\n  }, this);\n};\n_c = Userbookings;\nexport default Userbookings;\nvar _c;\n$RefreshReg$(_c, \"Userbookings\");","map":{"version":3,"names":["React","Userbookings"],"sources":["C:/Users/user/OneDrive/Documents/Tourism-Project-MERN/frontend/src/pages/Userbookings.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import jwt from \"jsonwebtoken\";\r\n// import { BASE_URL } from \"../utils/config\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import useFetch from \"../hooks/useFetch\";\r\n\r\n// const Userbookings = () => {\r\n//   const [bookings, setBookings] = useState([]);\r\n//   const { userId } = useParams();\r\n\r\n//   const getAccessToken = () => {\r\n//     const cookies = document.cookie.split(\"; \");\r\n//     const accessTokenCookie = cookies.find((row) =>\r\n//       row.startsWith(\"accessToken=\")\r\n//     );\r\n\r\n//     if (accessTokenCookie) {\r\n//       return accessTokenCookie.split(\"=\")[1];\r\n//     }\r\n\r\n//     return null;\r\n//   };\r\n\r\n//   // Function to decode JWT token\r\n//   const decodeToken = (token) => {\r\n//     try {\r\n//       const decoded = jwt.verify(token, process.env.JWT_SECRET_KEY);\r\n//       return decoded.id;\r\n//     } catch (error) {\r\n//       return null;\r\n//     }\r\n//   };\r\n\r\n//   // Get JWT token from cookies\r\n//   const accessToken = getAccessToken();\r\n//   const decodedUserId = accessToken ? decodeToken(accessToken) : null;\r\n\r\n//   // Set up headers with the decoded user ID\r\n//   const headers = {\r\n//     Authorization: `Bearer ${accessToken}`,\r\n//   };\r\n\r\n//   // Construct fetch URL based on the presence of userId\r\n//   const fetchUrl = userId\r\n//     ? `${BASE_URL}/booking/userbookings/${decodedUserId}`\r\n//     : `${BASE_URL}/booking/userbookings`;\r\n\r\n//   // UseFetch hook for fetching data\r\n//   const {\r\n//     data: fetchedBookings,\r\n//     loading,\r\n//     error,\r\n//   } = useFetch(fetchUrl, { headers });\r\n\r\n//   // Update state when data is fetched\r\n//   useEffect(() => {\r\n//     if (!loading && !error) {\r\n//       setBookings(fetchedBookings.data);\r\n//     }\r\n//   }, [fetchedBookings, loading, error]);\r\n\r\n//   // Loading state\r\n//   if (loading) {\r\n//     return <p>Loading...</p>;\r\n//   }\r\n\r\n//   // Error state\r\n//   if (error) {\r\n//     return <p>Error fetching user bookings: {error}</p>;\r\n//   }\r\n\r\n//   // Render the component\r\n//   return (\r\n//     <div>\r\n//       <h2>User Bookings</h2>\r\n//       {bookings.length === 0 ? (\r\n//         <p>No bookings available for this user.</p>\r\n//       ) : (\r\n//         <ul>\r\n//           {bookings.map((booking) => (\r\n//             <li key={booking._id}>\r\n//               <p>\r\n//                 <strong>Tour Name:</strong> {booking.tourName}\r\n//               </p>\r\n//               <p>\r\n//                 <strong>Guest Name:</strong> {booking.fullName}\r\n//               </p>\r\n//               <p>\r\n//                 <strong>Date:</strong> {booking.date}\r\n//               </p>\r\n//               <p>\r\n//                 <strong>Booked At:</strong> {booking.bookAt}\r\n//               </p>\r\n//               {/* Add more details as needed */}\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Userbookings;\r\n\r\nimport React from \"react\";\r\n\r\nconst Userbookings = () => {\r\n  return <div>Userbookings</div>;\r\n};\r\n\r\nexport default Userbookings;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,YAAY,GAAG,MAAM;EACzB,oBAAO;IAAA,UAAK;EAAY;IAAA;IAAA;IAAA;EAAA,QAAM;AAChC,CAAC;AAAC,KAFIA,YAAY;AAIlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}